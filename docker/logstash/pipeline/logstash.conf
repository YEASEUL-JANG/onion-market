input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.26.jar" # MySQL JDBC 드라이버 경로
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://mysql-db:3306/onion-db?useSSL=false"
    jdbc_user => "onion-user"
    jdbc_password => "onion1!"
    schedule => "0 * * * *" # 한시간마다 데이터 동기화
    statement => "SELECT * FROM ad_view_stat" # 동기화할 MySQL 쿼리
    tags => ["mysql_data"] # 태그 추가
  }
}


input {
  file {
    path => "/home/yeaseul/log/**/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
    tags => ["file_data"] # 태그 추가
  }
}

output {
  if "mysql_data" in [tags] {
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        index => "ad_view_stat" # Elasticsearch에 저장할 인덱스 이름
        document_id => "%{id}" # 각 문서를 고유하게 식별할 필드 (예: MySQL의 기본 키)
      }
      stdout { codec => json_lines } # 디버깅용 출력 (선택사항)
    }

    if "file_data" in [tags] {
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        index => "cnaps_yeaseul_test-%{+YYYY.MM.dd}"
      }
      stdout { codec => rubydebug } # 디버깅용 출력 (선택사항)
    }
}